// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketManager.API.DbContexts;

#nullable disable

namespace TicketManager.API.Migrations
{
    [DbContext(typeof(TicketManagerContext))]
    partial class TicketManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketManager.API.Entities.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            Date = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Conférence sur l'IA Éthique et Responsable",
                            Status = "Open"
                        },
                        new
                        {
                            TicketId = 2,
                            Date = new DateTime(2024, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Atelier sur les Techniques de Cybersécurité Avancées",
                            Status = "Open"
                        },
                        new
                        {
                            TicketId = 3,
                            Date = new DateTime(2024, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Séminaire sur les Applications de l'IA dans le Secteur de la Santé",
                            Status = "Closed"
                        },
                        new
                        {
                            TicketId = 4,
                            Date = new DateTime(2024, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Forum sur les Menaces Cybernétiques et les Solutions",
                            Status = "Open"
                        },
                        new
                        {
                            TicketId = 5,
                            Date = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Expo sur l'Innovation Technologique et le Futur",
                            Status = "Open"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
